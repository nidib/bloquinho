name: CI

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    MONGO_DB_URL: mongodb://username:password@localhost:27017

on:
    pull_request:
    release:
        types: [published]
    push:
        branches:
            - main
    workflow_dispatch:
        inputs:
            deployment_target:
                description: 'Deployment Target'
                required: true
                default: 'preview'
                type: choice
                options:
                    - preview

jobs:
    compile:
        name: Compile
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: 10.12.3
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: pnpm
            - name: Install Dependencies
              run: pnpm install
            - name: Lint Code
              run: pnpm lint
            - name: Compile TypeScript
              run: pnpm compile

    e2e:
        name: E2E
        runs-on: ubuntu-latest
        needs: compile

        services:
            mongodb:
                image: mongo:latest
                ports:
                    - 27017:27017
                env:
                    MONGO_INITDB_ROOT_USERNAME: username
                    MONGO_INITDB_ROOT_PASSWORD: password
                    MONGO_INITDB_DATABASE: main

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: 10.12.3
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: pnpm
            - name: Wait for services
              run: |
                pnpx wait-on tcp:127.0.0.1:27017 -v -t 10s
            - name: Cypress run
              uses: cypress-io/github-action@v6
              with:
                build: 'pnpm --filter web run build --no-lint'
                start: 'pnpm --filter web run dev'
                wait-on: 'http://localhost:3000'
                browser: chrome
                working-directory: apps/web-e2e

    deploy-to-preview:
        name: Deploy to Preview
        runs-on: ubuntu-latest
        needs: e2e
        if: github.event_name == 'workflow_dispatch'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: 10.12.3
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: pnpm
            - name: Install Dependencies
              run: pnpm install
            - name: Install Vercel CLI
              run: pnpm install -g vercel@latest
            - name: Build web app
              run: vercel deploy --yes --target=${{ github.event.inputs.deployment_target }} --token=${{ secrets.VERCEL_TOKEN }}

    deploy-to-production:
        name: Deploy to Production
        runs-on: ubuntu-latest
        needs: e2e
        if: github.event_name == 'release'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: 10.12.3
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: pnpm
            - name: Install Dependencies
              run: pnpm install
            - name: Install Vercel CLI
              run: pnpm install -g vercel@latest
            - name: Build web app
              run: vercel deploy --yes --target=production --token=${{ secrets.VERCEL_TOKEN }}